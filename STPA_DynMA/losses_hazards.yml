#
# A system is a set of components that act together as a whole to achieve some 
# common goal, objective, or end. A system may contain subsystems and may also
# be part of a larger system.
#

SYSTEM:     Linux Kernel.
Boundaries: Kernel API, kernel space memory.

#
# A loss involves something of value to stakeholders. Losses may include a loss
# of human life or human injury, property damage, environmental pollution, loss
# of mission, loss of reputation, loss or leak of sensitive information, or any
# other loss that is unacceptable to the stakeholders.
#

Losses:
- Identifier: L-1 
	Text: Loss of or damage to elements outside the system (SW elements)
- Identifier: L-2
	Text: Loss of mission (the kernel does not provide correctly it services anymore) 
- Identifier: L-3
	Text: Loss of user satisfaction 

#
# A hazard is a system state or set of conditions that, together with a
# particular set of worst-case environmental conditions, will lead to a loss.
#

#
# One way to derive sub-hazards is to ask: What do we need to control to prevent this hazard?
# In our case: allocation and deallocation of memory 
#
# Note: Sub-hazards only for dynamic memory allocation
Hazards:
- Identifier: H-1  #availability
	Text: >
		The kernel does not respond to external input.
	Losses: [L-1, L-2, L-3]
  
	- Identifier: H-1.1
		Text: >
			The kernel does not allocate memory for a requester. 
      (eg. process, kernel thread, irq handler, driver, libraries...)
	
  - Identifier: H-1.2
		Text: >
			The kernel takes too long to allocate memory for a safety critical application.
	
  - Identifier: H-1.3
		Text: >
			The kernel does not deallocate memory for a requester.

  - Identifier: H-1.4
		Text: >
			The kernel takes too long to dallocate memory for a safety critical application.

- Identifier: H-2 #integrity
	Text: >
		The kernel does not maintain the integrity of the user space.
	Losses: [L-1, L-2, L-3]

	- Identifier: H-2.1
		Text: >
			The kernel allocates a memory space already allocated for another application. 

	- Identifier: H-2.2
		Text: >
			The kernel deallocates a memory space still needed to be used by an application. 
  
  - Identifier: H-2.3 
		Text: >
			The kernel allocates a subset of the requested user memory for a safety critical 
      application.

- Identifier: H-3 #integrity
	Text: >
		The kernel does not maintain the integrity of kernel data.
	Losses: [L-1, L-2, L-3]

	- Identifier: H-3.1 
		Text: >
			The kernel allocates a memory space already allocated for itself. 

	- Identifier: H-3.2
		Text: >
			The kernel deallocates a memory space still needed to be used by the kernel. 
    
  - Identifier: H-3.3 
		Text: >
			The kernel allocates a subset of the requested kernel memory for a safety critical 
      application.

- Identifier: H-4 #integrity
	Text: >
		The kernel violates the system boundaries.
	Losses: [L-1, L-2, L-3]

	- Identifier: H-4.1
		Text: >
			The kernel allocates an invalid memory space to be used by an application. 

	- Identifier: H-4.2 
		Text: >
			The kernel allocates an invalid memory space. 



























# Inserire memoria condivisa?
# se si:
# - caso non alloco/dealloco per i task ricado in H-1
# - caso alloco/dealloco solo per un task solo -> i task non comunicano ma un task ricade in H-1
# - caso alloco parzialmente/ tardi ricado in H-2
# - caso alloco spazio destinato a kernel/altra applicazione ricado in H-3 e H-4
# In teoria memoria condivisa è compresa in privata


















Failure modes:
- Identifier: F-1 (Memory Leaks)
	Text: >
		Memory is allocated and not freed after use, or when the pointer to a memory
		allocation is deleted, rendering the memory no longer usable. 
	Losses: [L-4]

- Identifier: F-2 (Memory Fragmentation)
	Text: >
		Fragmented memory describes all of a system's unusable free memory. 
		These resources remain unused because the memory allocator responsible for 
		allocating them cannot make the memory available. This problem usually occurs 
		because free memory is scattered at separate locations in small, discontinuous 
		portions.	
	Losses: [L-4]

- Identifier: F-3 (Memory Exhaustion)
	Text: >
		No additional memory can be allocated for use by process or kernel. 
	Losses: [L-1, L-3]

- Identifier: F-4 (Unwanted or undetected overlay of memory (IEC 61508–7 C.2.6.3))
	Text: >
		The system allocates/frees a portion of memory that is already used by 
		another user (potentially with safety related data) causing an interference 
		on previously stored objects. 		
	Losses: [L-2]

- Identifier: F-5 (Bottlenecks of resources during run-time (IEC 61508–7 C.2.6.3))
	Text: >
		The time for dynamic memory allocation changes according to the amount of 
		free space. Looking for free address ranges may take more time than expected 
		blocking the resource to other safety-related users.
	Losses: [L-3]

- Identifier: F-6 (Unavailable Data)
	Text: >
		Memory that was not dynamically allocated is subsequently freed. 
	Losses: [L-1, L-2]

